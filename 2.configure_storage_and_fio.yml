---
#disable UFW
- name: 'disable UFW'
  hosts: fio
  tasks:
   - name: 'disable UFW'
     community.general.ufw:
       state: disabled
#configure proxy server for apt/pip usage
#if there is no proxy server in your environment, then this entire play should be commented out
- name: 'set up proxy'
  hosts: fio
  tasks:
    - name: 'set up proxy'
      include: internal_scripts/set_http_proxy.yml
#configure PVs, VGs, LVs, file systems and mount those FS
#based on fio_storages.yml vars
- name: 'configure storage for fio test'
  hosts: fio
  tasks:
   - name: 'create PVs and VGs'
     community.general.lvg:
       vg: "{{ item.vg }}"
       pvs: "/dev/{{ item.pv }}"
     loop: "{{ storages }}"
   - name: 'create LVs'
     community.general.lvol:
       lv: "{{ item.lv }}"
       vg: "{{ item.vg }}"
       state: present
       shrink: false
       size: 100%FREE
     loop: "{{ storages }}"
   - name: 'create FSes'
     community.general.filesystem:
       dev: "/dev/mapper/{{ item.vg }}-{{ item.lv }}"
       fstype: ext4
       state: present
     loop: "{{ storages }}"
   - name: 'mount FSes'
     ansible.posix.mount:
       path: "/{{ item.lv }}"
       src: "/dev/mapper/{{ item.vg }}-{{ item.lv }}"
       state: mounted
       fstype: ext4
     loop: "{{ storages }}"
   - name: 'FSes permissions'
     ansible.builtin.file:
       path: "/{{ item.lv }}"
       state: directory
       recurse: true
       mode: 02777
       owner: "{{ main_user }}"
       group: "{{ main_group }}"
     loop: "{{ storages }}"
#install fio, iostat, make fio directory and use j2 templates to create fio job files 
- name: 'configure fio'
  hosts: fio
  tasks:
   - name: 'create fio directory'
     file:
       name: "{{ fio_dir }}"
       state: directory
       recurse: true
       owner: "{{ main_user }}"
       group: "{{ main_group }}"
       mode: 02777
   - name: 'install fio'
     ansible.builtin.apt:
       update_cache: true
       name: fio
       state: present
   - name: 'install sysstat (iostat)'
     ansible.builtin.apt:  
       update_cache: true
       name: sysstat
       state: present   
   - name: "Transferring all data files"
     template:
       src: "../templates/{{ item | basename }}"
       dest: "{{ fio_dir }}/{{ item | basename }}.fio"
     with_fileglob: "workload_profile*.j2"
#set the EN_US locale
- name: 'set the correct EN_US locale so the iostat output could be used by iostat-cli and matplotlib'
  hosts: fio
  tasks:
    - name: 'set locale'
      include: internal_scripts/set_os_locale.yml
...

